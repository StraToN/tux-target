// Which network protocol version for this server
NetworkVersion       = 5;

// Number of players needed before starting a session
NbWaitingClients     = 1;

// Name list of players that are admin (able to execute admin commands)
Admin                = { "[dev]ace", "[dev]skeet" };

// Name list of players that are moderator (able to execute moderator commands)
Moderator            = { "[kop]nicolas03","reddstorm2001","[strikers]tst","[strikers]hasriel","curven","clinaos","tvt_dd","monsieurseb","[modo]chevalier","[GrooT]polojojo" };

// Tcp listen port for clients
TcpPort              = 51574;

// Max number of simultaneous players
NbMaxClients         = 16;

// Uniq Id of your shard (you must setup it)
ShardId              = 0;

// Message displayed when a players comes in
WelcomeMessage       = { "Welcome to Mtp Target", "Feel free to send feedback on the official forum http://www.mtp-target.org", "Happy playing!" };

// 1 = the server runs in high priority on Windows
HighPriority         = 1;

// Maximum count of replay saved (for each start point of each level)
maxReplaySavedCount = 10;

// Minimal score for a bot to learn
SavedReplayMinimumScore = 50;

// How many bots are necesary if not enough players
ForcedClientCount    = 5;

// Name of bots
ForcedClientName     = { "bill", "richard", "xobik", "linus", "moumou", "starfox", "alice", "bob", "biche", "astorm", "ringo", "menew", "chikant", "gijoe", "klavich" };

// Path where to find the user texture
UserTexture   		= "../user_texture";

// Which sort of level do we use 1=easy 2=expert 3=test
ReleaseLevel         = { 1, 2 };

// ???
MinDeltaToSendFullUpdate = 3;

// ???
LuaWarningMaxCount   = 5;

// 1 = disconnect afk players
CheckAfk	     = 1;

// How many session before a player is tagged to be afk
MaxAfkSessionCount   = 3;

// 0 = no network optim
DisableNetworkOptimization = 1;

// A player can't play to this server if his score is greater or equal
// to this value (-1 = no score limit)
MaxScore = -1;

// Set to 1 if you want to save ping stat on each session (floodly)
SavePingStat = 0;

//if a player cannot download one file during this time then he will be kicked out
WaitingReadyTimeout = 20;

//////////////////////////////////////////////////////////////////////////
// You don't need to change variables below
//////////////////////////////////////////////////////////////////////////

// Nel Service must not manage our time, we have our own system
UpdateTimeout        = -1;

// This server doesn't need NeL admin service
DontUseAES           = 1;

// This server doesn't need NeL naming service
DontUseNS            = 1;

// IP address of where the login service is
LSHost               = "mtp-target.dyndns.org";

// Which windows style to render the service
WindowStyle          = "WIN";

// Width of the window in pixel
WWinParam            = 732;

// Heigh of the window in pixel
HWinParam            = 543;

// Log filters
NegFiltersDebug      = { "LNET" };
NegFiltersInfo       = { "LNET" };

// Variables displayed on the window
DisplayedVariables   = { "", "|CurrentLevel", "|CurrentState", "Timeout", "NbClients", "NbEntities", "", "@displayLevel", "@displayEntities", "@forceEnd", "", "Watch1", "", "Watch2", "", "Watch3", "", "Watch4", "", "Watch5" };

// Address of your server
ListenAddr           = "";

// Path to include where the data are
Paths                = { "data" };

// Statistics on level
LevelStats           = { };

// List of registered players
Accounts             = { };

// Commands to execute when running the server
StartCommands        = { "watch 1" };

//chat bot name and password and channel
publicChatBotIdentity	= {"login","password","channel"};

//1 = enable public chat bot
publicChatBot = 0;

//forward by 'tell' to this people
publicChatForwardTo	= {"Ace","Skeet"};



// Defaults value for levels
LevelName            = "No level name";
Author               = "Anonymous";
ModuleScore          = 0;
ModuleBounce         = 1;
ModuleAccel          = 0.0001;
ModuleFriction       = 5;
OpenZSpeed           = 0.1;
OpenMinAngleToZSpeed = 0.01;
OpenMinHSpeed        = 0.02;
OpenMinZSpeed        = 0.005;
OpenAccelCoef        = 0.12;
CloseAccelCoef       = 1.0;
SphereDensity        = 20.0;
Gravity				 = -0.981;
TimeBeforeStart      = 5000;
TimeBeforeRestart    = 5000;
TimeBeforeCheck      = 10000;
TimeTimeout          = 60000;
MinVelBeforeEnd      = 0.03;
DefaultMaxOpenClose  = 2;
BounceWater          = 0.0;
BounceVelWater       = 0.0;
BounceClient         = 1.0;
BounceVelClient      = 0.0;
BounceScene          = 0.2;
BounceVelScene       = 0.1;
AngularDecreasing    = 0.9;
BotAccuracyOpen      = 0.0002;
BotAccuracyClose     = 0.0005;
